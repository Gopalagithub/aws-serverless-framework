{
  "swagger" : "2.0",
  "info" : {
    "version" : "2020-01-06T16:56:11Z",
    "title" : "dev-aws-serverless-assignment"
  },
  "host" : "zxkoq8qq0d.execute-api.ap-south-1.amazonaws.com",
  "basePath" : "/dev",
  "schemes" : [ "https" ],
  "paths" : {
    "/api/v1/events/sensors" : {
      "get" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-list/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "post" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-create/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "put" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-update/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "delete" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-delete/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,PUT,GET,DELETE,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/api/v1/events/sensors/{id}" : {
      "get" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-get/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/api/v1/sensor" : {
      "post" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-create/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "put" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-update/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,PUT,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/api/v1/sensor/{sensorId}" : {
      "get" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-get/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "delete" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-delete/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET,DELETE'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/api/v1/sensors" : {
      "post" : {
        "responses" : { },
        "security" : [ {
          "authorize" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-list/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,Authorization'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    }
  },
  "securityDefinitions" : {
    "authorize" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header",
      "x-amazon-apigateway-authtype" : "custom",
      "x-amazon-apigateway-authorizer" : {
        "authorizerUri" : "arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-south-1:344184308618:function:aws-serverless-assignment-dev-authorize/invocations",
        "authorizerResultTtlInSeconds" : 30,
        "identitySource" : "method.request.header.Authorization",
        "type" : "request"
      }
    }
  }
}